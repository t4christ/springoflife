sudo: required
services:
  - docker

before_install:
    - docker-compose build

script:
  - docker-compose up -d
  - docker-compose down
  - 'curl -X POST https://content.dropboxapi.com/2/files/download --header "Authorization: Bearer $DRPB" --header "Dropbox-API-Arg: {"path": "/software-application/sol/missions.springsoflifeg.com.pem"}" > ./nginx/missions.springsoflifeg.com.pem'
  - 'curl -X POST https://content.dropboxapi.com/2/files/download --header "Authorization: Bearer $DRPB" --header "Dropbox-API-Arg: {"path": "/software-application/sol/privkey.pem"}" > ./nginx/privkey.pem'
  - ls nginx/sites-enabled
 

after_success:
  - docker build -t texplode/springs-web  .
  - docker build -t texplode/springs-nginx  ./nginx
  - docker build -t texplode/docker_smtp ./docker-smtp

  # Login to Docker
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin

  # Take images and push them to dockerhub

  - docker push texplode/springs-web
  - docker push texplode/springs-nginx
  - docker push texplode/docker_smtp

 



 
# deploy:
#   provider: script
#   script: echo "yes" ssh $EC2_INSTANCE 'bash ./deploy.sh'
#   on:
#     branch: springs

deploy:
  provider: elasticbeanstalk
  region: us-east-2
  app: sol
  env: Sol-env 
  bucket_name: springs-bucket
  # bucket_path: spring_bucket
  on:
    branch: springs
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY

